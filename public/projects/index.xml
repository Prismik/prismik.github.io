<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Francis Beauchamp</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projects on Francis Beauchamp</description>
    <generator>Hugo</generator>
    <language>en-CA</language>
    <lastBuildDate>Sat, 05 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Slash</title>
      <link>http://localhost:1313/projects/slash/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/slash/</guid>
      <description>&lt;p&gt;Hack and slash game made with Unreal Engine 5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SwiftTracer - A physically based rendering engine</title>
      <link>http://localhost:1313/projects/swifttracer/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/swifttracer/</guid>
      <description>&lt;p&gt;SwiftTracer is an implementation of a physically based rendering engine that is inspired by PBRT, Mitsuba and many other contributors in the field. At it&amp;rsquo;s core, it uses &lt;a href=&#34;https://developer.apple.com/documentation/accelerate/simd-library&#34;&gt;simd&lt;/a&gt; to perform the ray tracing computations: mostly vectors and matrices operations along with some trigonometry. The tracing is done in parallel, thanks to the new &lt;code&gt;async/await&lt;/code&gt; &lt;a href=&#34;https://docs.swift.org/swift-book/documentation/the-swift-programming-language/concurrency/&#34;&gt;concurrency model&lt;/a&gt; introduced in Swift 5.5. We split our target image in a series of blocks, all of which run a self-contained tracing task. The collision detection is done using a combination of shape intersections, AABBs and even acceleration techniques like BVH. Several image formats like png, jpg, pfm and exr are supported.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
